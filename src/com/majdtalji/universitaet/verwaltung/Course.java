/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.majdtalji.universitaet.verwaltung;

import com.majdtalji.universitaet.db.ConnectionDataBase;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import universitaet.MainMenu;

/**
 *
 * @author Majd
 */
public class Course extends javax.swing.JFrame {

    /**
     * Creates new form Course
     */
    Connection con = null;
    PreparedStatement com = null;
    ResultSet rst = null;

    public Course() {
        initComponents();

        insertNameDoctor();

        if (MainMenu.ch == 2) {
            this.setTitle("Kurs bearbeiten");
            addUndDeleteUndUpdate.setIcon(new ImageIcon(getClass().getResource("/image/222.png")));
            name.setEnabled(false);
            hours.setEnabled(false);
            salary.setEnabled(false);
            doctor.setEnabled(false);
            first.setEnabled(false);
            second.setEnabled(false);
        } else if (MainMenu.ch == 3) {
            this.setTitle("Kurs löschen");
            addUndDeleteUndUpdate.setIcon(new ImageIcon(getClass().getResource("/image/333.png")));
            name.setEnabled(false);
            hours.setEnabled(false);
            salary.setEnabled(false);
            doctor.setEnabled(false);
            first.setEnabled(false);
            second.setEnabled(false);
        }

    }

    private void insertNameDoctor() {
//      id_doctor+name_doctor+password+mobile+address+gender
        try {
            con = ConnectionDataBase.getConnection();
            com = con.prepareStatement("SELECT name_doctor FROM doctor");
            rst = com.executeQuery();

            while (rst.next()) {
                doctor.addItem(rst.getString("name_doctor"));
            }
            doctor.setSelectedIndex(-1);
        } catch (Exception e) {
        } finally {
            try {
                con.close();
                rst.close();
            } catch (Exception ex) {
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        idLabel = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        hoursLabel = new javax.swing.JLabel();
        salaryLabel = new javax.swing.JLabel();
        salary = new javax.swing.JTextField();
        hours = new javax.swing.JTextField();
        doctorLabel = new javax.swing.JLabel();
        doctor = new javax.swing.JComboBox<>();
        first = new javax.swing.JRadioButton();
        second = new javax.swing.JRadioButton();
        semesterLabel = new javax.swing.JLabel();
        addUndDeleteUndUpdate = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kurs hinzufügen");
        setIconImage(new ImageIcon(getClass().getResource("/image/icon-hochschule.png")).getImage());
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        idLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idLabel.setForeground(new java.awt.Color(0, 255, 204));
        idLabel.setText("Kursnummer");
        getContentPane().add(idLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        id.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idKeyPressed(evt);
            }
        });
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 210, -1));

        name.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 210, -1));

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(0, 255, 204));
        nameLabel.setText("Kursname");
        getContentPane().add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        hoursLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        hoursLabel.setForeground(new java.awt.Color(0, 255, 204));
        hoursLabel.setText("Anzahl Stunden");
        getContentPane().add(hoursLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        salaryLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        salaryLabel.setForeground(new java.awt.Color(0, 255, 204));
        salaryLabel.setText("Preis Stunde");
        getContentPane().add(salaryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        salary.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        getContentPane().add(salary, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 210, -1));

        hours.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        getContentPane().add(hours, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 210, -1));

        doctorLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        doctorLabel.setForeground(new java.awt.Color(0, 255, 204));
        doctorLabel.setText("Kurs Doctor");
        getContentPane().add(doctorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        doctor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        getContentPane().add(doctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 210, -1));

        buttonGroup1.add(first);
        first.setText("Erster");
        getContentPane().add(first, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, -1, -1));

        buttonGroup1.add(second);
        second.setText("Zweite");
        getContentPane().add(second, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, -1, -1));

        semesterLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        semesterLabel.setForeground(new java.awt.Color(0, 255, 204));
        semesterLabel.setText("Semester");
        getContentPane().add(semesterLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        addUndDeleteUndUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/111.png"))); // NOI18N
        addUndDeleteUndUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUndDeleteUndUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(addUndDeleteUndUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/555.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/course.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 360));

        setSize(new java.awt.Dimension(397, 385));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void addUndDeleteUndUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUndDeleteUndUpdateActionPerformed

        switch (MainMenu.ch) {
            case 1:
                insert();
                break;
            case 2:
                update();
                break;
            case 3:
                delete();
                break;
        }
    }//GEN-LAST:event_addUndDeleteUndUpdateActionPerformed

    private void idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER) {

            if (id.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Das feld für die Kursnummer ist leer.", "Ein leers Feld", 2);
            } else {

                try {
                    //        		id_course+name_course+hour+name_doctor+salary_one_hour+semester
                    con = ConnectionDataBase.getConnection();
                    com = con.prepareStatement("SELECT * FROM course WHERE id_course = '" + Integer.parseInt(id.getText()) + "'");
                    rst = com.executeQuery();

                    if (rst.next()) {
                        if (MainMenu.ch == 2) {
                            id.setEnabled(false);
                            name.setEnabled(true);
                            hours.setEnabled(true);
                            salary.setEnabled(true);
                            doctor.setEnabled(true);
                            first.setEnabled(true);
                            second.setEnabled(true);
                        }
                        name.setText(rst.getString("name_course"));

                        hours.setText(String.valueOf(rst.getFloat("hour")));
                        salary.setText(String.valueOf(rst.getFloat("salary_one_hour")));
                        
                        String doctorName = rst.getString("name_doctor");
                        if (doctorName.equals("")) {
                            doctor.setSelectedIndex(-1);
                        } else {
                            doctor.setSelectedItem(doctorName);
                        }                        

                        int semester = rst.getInt("semester");
                        if (semester == 1) {
                            first.setSelected(true);
                        } else {
                            second.setSelected(true);
                        }

                    } else {
                        name.setText("");
                        hours.setText("");
                        salary.setText("");
                        doctor.setSelectedIndex(-1);
                        buttonGroup1.clearSelection();
//                        first.setSelected(false);
//                        second.setSelected(false);
                        JOptionPane.showMessageDialog(null, "Die Kursnummer existiert nicht", "Existiert", 2);
                    }

                } catch (Exception e) {
                } finally {
                    try {
                        con.close();
                        rst.close();
                    } catch (Exception ex) {
                    }
                }

            }
        }

    }//GEN-LAST:event_idKeyPressed

    private void insert() {

        String miss = "Sie haben vergessen, die folgenden Daten einzugeben :\n";
        if (id.getText().equals("")) {
            miss += idLabel.getText() + "\n";
        }
        if (name.getText().equals("")) {
            miss += nameLabel.getText() + "\n";
        }
        if (hours.getText().equals("")) {
            miss += hoursLabel.getText() + "\n";
        }
        if (salary.getText().equals("")) {
            miss += salaryLabel.getText() + "\n";
        }
        if (doctor.getSelectedIndex() == -1) {
            miss += doctorLabel.getText() + "\n";
        }
        if (!(first.isSelected() || second.isSelected())) {
            miss += semesterLabel.getText() + "\n";
        }

        int semester = 1;
        if (second.isSelected()) {
            semester = 2;
        }
        if (!id.getText().equals("") && !name.getText().equals("") && !hours.getText().equals("") && !salary.getText().equals("") && doctor.getSelectedIndex() != -1 && (first.isSelected() || second.isSelected())) {
//        		id_course+name_course+hour+name_doctor+salary_one_hour+semester
            try {
                con = ConnectionDataBase.getConnection();
                com = con.prepareStatement("SELECT * FROM course WHERE id_course = '" + Integer.parseInt(id.getText()) + "'");
                rst = com.executeQuery();

                if (rst.next()) {
                    JOptionPane.showMessageDialog(null, "Die Kursnummer existiert bereits", "Existiert", 2);
                } else {

                    try {
                        com = con.prepareStatement("INSERT INTO course(id_course, name_course, hour, name_doctor, salary_one_hour, semester) "
                                + "VALUES ('" + Integer.parseInt(id.getText()) + "','" + name.getText() + "','" + Float.parseFloat(hours.getText()) + "','" + doctor.getSelectedItem() + "','" + Float.parseFloat(salary.getText()) + "','" + semester + "')");
                        boolean bool = com.execute();

                        JOptionPane.showMessageDialog(null, "Kurs erfolgreich hinzugefügt", "Hinzugefügt", JOptionPane.INFORMATION_MESSAGE);
                        clear();
                    } catch (Exception e) {
                        System.out.println(e);
                    } finally {
                        try {
                            con.close();
                        } catch (Exception ex) {
                        }
                    }

                }

            } catch (Exception e) {
            } finally {
                try {
                    con.close();
                    rst.close();
                } catch (Exception ex) {
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, miss, "Datenverlust", 2);
        }

    }

    private void clear() {

        id.setText("");
        name.setText("");
        hours.setText("");
        salary.setText("");
        doctor.setSelectedIndex(-1);
        buttonGroup1.clearSelection();
//        first.setSelected(false);
//        second.setSelected(false);

    }

    private void update() {

        String miss = "Sie haben vergessen, die folgenden Daten einzugeben :\n";
        if (name.getText().equals("")) {
            miss += nameLabel.getText() + "\n";
        }
        if (hours.getText().equals("")) {
            miss += hoursLabel.getText() + "\n";
        }
        if (salary.getText().equals("")) {
            miss += salaryLabel.getText() + "\n";
        }
        if (doctor.getSelectedIndex() == -1) {
            miss += doctorLabel.getText() + "\n";
        }
        if (!(first.isSelected() || second.isSelected())) {
            miss += semesterLabel.getText() + "\n";
        }

        int semester = 1;
        if (second.isSelected()) {
            semester = 2;
        }
        if (!name.getText().equals("") && !hours.getText().equals("") && !salary.getText().equals("") && doctor.getSelectedIndex() != -1 && (first.isSelected() || second.isSelected())) {

            try {
                //id_course+name_course+hour+name_doctor+salary_one_hour+semester
                con = ConnectionDataBase.getConnection();
                com = con.prepareStatement("UPDATE course SET name_course ='" + name.getText() + "', hour ='" + Float.parseFloat(hours.getText()) + "', name_doctor ='" + doctor.getSelectedItem() + "', salary_one_hour ='" + Float.parseFloat(salary.getText()) + "', semester ='" + semester + "' WHERE id_course ='" + Integer.parseInt(id.getText()) + "'");
                com.execute();

                JOptionPane.showMessageDialog(null, "Kursendaten wurden erfolgreich geändert.", "Modifiziert", JOptionPane.INFORMATION_MESSAGE);
                clear();
                id.setEnabled(true);
                name.setEnabled(false);
                hours.setEnabled(false);
                salary.setEnabled(false);
                doctor.setEnabled(false);
                first.setEnabled(false);
                second.setEnabled(false);

            } catch (Exception e) {
            } finally {
                try {
                    con.close();
                } catch (Exception ex) {
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, miss, "Datenverlust", 2);
        }
    }

    private void delete() {

        String miss = "Sie haben vergessen, die folgenden Daten einzugeben :\n";
        if (id.getText().equals("")) {
            miss += idLabel.getText() + "\n";
        }

        String gender = first.getText();
        if (second.isSelected()) {
            gender = second.getText();
        }
        if (!id.getText().equals("")) {

            try {
//                  id_course+name_course+hour+name_doctor+salary_one_hour+semester
                con = ConnectionDataBase.getConnection();
                com = con.prepareStatement("SELECT * FROM course WHERE id_course = '" + Integer.parseInt(id.getText()) + "'");
                rst = com.executeQuery();

                if (rst.next()) {
                    con = ConnectionDataBase.getConnection();
                    com = con.prepareStatement("DELETE FROM course WHERE id_course = '" + Integer.parseInt(id.getText()) + "'");
                    com.execute();

                    JOptionPane.showMessageDialog(null, "Kurs erfolgreich gelöscht.", "Gelöscht", JOptionPane.INFORMATION_MESSAGE);
                    clear();
                    id.setEnabled(true);
                    name.setEnabled(false);
                    hours.setEnabled(false);
                    salary.setEnabled(false);
                    first.setEnabled(false);
                    second.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Die Kursnummer existiert bereits nicht", "Existiert nicht", 2);
                }

            } catch (Exception e) {
            } finally {
                try {
                    con.close();
                } catch (Exception ex) {
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, miss, "Datenverlust", 2);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Course().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUndDeleteUndUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> doctor;
    private javax.swing.JLabel doctorLabel;
    private javax.swing.JRadioButton first;
    private javax.swing.JTextField hours;
    private javax.swing.JLabel hoursLabel;
    private javax.swing.JTextField id;
    private javax.swing.JLabel idLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField name;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField salary;
    private javax.swing.JLabel salaryLabel;
    private javax.swing.JRadioButton second;
    private javax.swing.JLabel semesterLabel;
    // End of variables declaration//GEN-END:variables
}
