/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.majdtalji.universitaet.verwaltung;

import com.majdtalji.universitaet.db.ConnectionDataBase;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import universitaet.MainMenu;

/**
 *
 * @author Majd
 */
public class Student extends javax.swing.JFrame {

    /**
     * Creates new form Student
     */
    Connection con = null;
    PreparedStatement com = null;
    ResultSet rst = null;

    public Student() {
        initComponents();

        switch (MainMenu.ch) {
            case 2:
                this.setTitle("Student bearbeiten");
                addUndDeleteUndUpdate.setIcon(new ImageIcon(getClass().getResource("/image/222.png")));
                name.setEnabled(false);
                mobile.setEnabled(false);
                male.setEnabled(false);
                fmale.setEnabled(false);
                break;
            case 3:
                this.setTitle("Student löschen");
                addUndDeleteUndUpdate.setIcon(new ImageIcon(getClass().getResource("/image/333.png")));
                name.setEnabled(false);
                mobile.setEnabled(false);
                male.setEnabled(false);
                fmale.setEnabled(false);
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        idLabel = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        mobileLabel = new javax.swing.JLabel();
        mobile = new javax.swing.JTextField();
        fmale = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        geschlechtLabel = new javax.swing.JLabel();
        addUndDeleteUndUpdate = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Student hinzufügen");
        setIconImage(new ImageIcon(getClass().getResource("/image/icon-hochschule.png")).getImage());
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        idLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idLabel.setText("Student Nummer");
        getContentPane().add(idLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        id.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idKeyPressed(evt);
            }
        });
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 170, -1));

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nameLabel.setText("Student Name");
        getContentPane().add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        name.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 170, -1));

        mobileLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        mobileLabel.setText("Handynummer");
        getContentPane().add(mobileLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        mobile.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        getContentPane().add(mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 170, -1));

        buttonGroup1.add(fmale);
        fmale.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        fmale.setText("Weiblich");
        getContentPane().add(fmale, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, -1, -1));

        buttonGroup1.add(male);
        male.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        male.setText("Männlich");
        getContentPane().add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, -1, -1));

        geschlechtLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        geschlechtLabel.setText("Geschlecht");
        getContentPane().add(geschlechtLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        addUndDeleteUndUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/111.png"))); // NOI18N
        addUndDeleteUndUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUndDeleteUndUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(addUndDeleteUndUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/555.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/16.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 270));

        setSize(new java.awt.Dimension(353, 297));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void addUndDeleteUndUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUndDeleteUndUpdateActionPerformed

        switch (MainMenu.ch) {
            case 1:
                insert();
                break;
            case 2:
                update();
                break;
            case 3:
                delete();
                break;
        }

    }//GEN-LAST:event_addUndDeleteUndUpdateActionPerformed

    private void idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER) {

            if (id.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Das feld für die Studentnummer ist leer.", "Ein leers Feld", 2);
            } else {

                try {
                    con = ConnectionDataBase.getConnection();
                    com = con.prepareStatement("SELECT * FROM student WHERE id_student = '" + Integer.parseInt(id.getText()) + "'");
                    rst = com.executeQuery();

                    if (rst.next()) {
                        //id_student + name_student + password + mobile + gender + avg + required_amount + amount_paid + rest_of_the_fees

                        if (MainMenu.ch == 2) {
                            id.setEnabled(false);
                            name.setEnabled(true);
                            mobile.setEnabled(true);
                            male.setEnabled(true);
                            fmale.setEnabled(true);
                        }
                        name.setText(rst.getString("name_student"));

                        mobile.setText(rst.getString("mobile"));

                        String gender = rst.getString("gender");
                        if (gender.equals(fmale.getText())) {
                            fmale.setSelected(true);
                        } else {
                            male.setSelected(true);
                        }

                    } else {
                        name.setText("");
                        mobile.setText("");
                        buttonGroup1.clearSelection();
//                        male.setSelected(false);
//                        fmale.setSelected(false);
                        JOptionPane.showMessageDialog(null, "Die Studentnummer existiert nicht", "Existiert", 2);
                    }

                } catch (Exception e) {
                } finally {
                    try {
                        con.close();
                        rst.close();
                    } catch (Exception ex) {
                    }
                }

            }
        }

    }//GEN-LAST:event_idKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUndDeleteUndUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton fmale;
    private javax.swing.JLabel geschlechtLabel;
    private javax.swing.JTextField id;
    private javax.swing.JLabel idLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField mobile;
    private javax.swing.JLabel mobileLabel;
    private javax.swing.JTextField name;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables

    private void insert() {

        String miss = "Sie haben vergessen, die folgenden Daten einzugeben :\n";
        if (id.getText().equals("")) {
            miss += idLabel.getText() + "\n";
        }
        if (name.getText().equals("")) {
            miss += nameLabel.getText() + "\n";
        }
        if (mobile.getText().equals("")) {
            miss += mobileLabel.getText() + "\n";
        }
        if (!(male.isSelected() || fmale.isSelected())) {
            miss += geschlechtLabel.getText() + "\n";
        }

        String gender = male.getText();
        if (fmale.isSelected()) {
            gender = fmale.getText();
        }
        if (!id.getText().equals("") && !name.getText().equals("") && !mobile.getText().equals("") && (male.isSelected() || fmale.isSelected())) {
//        	id_student+name_student+password+mobile+gender+avg+required_amount+amount_paid+rest_of_the_fees
            try {
                con = ConnectionDataBase.getConnection();
                com = con.prepareStatement("SELECT * FROM student WHERE id_student = '" + Integer.parseInt(id.getText()) + "'");
                rst = com.executeQuery();

                if (rst.next()) {
                    JOptionPane.showMessageDialog(null, "Die Studentnummer existiert bereits", "Existiert", 2);
                } else {

                    try {
                        com = con.prepareStatement("insert into student(id_student, name_student, password, mobile, gender, avg, required_amount, amount_paid, rest_of_the_fees) "
                                + "VALUES ('" + Integer.parseInt(id.getText()) + "','" + name.getText() + "','123456','" + mobile.getText() + "','" + gender + "','0','0','0','0')");
                        boolean bool = com.execute();

                        JOptionPane.showMessageDialog(null, "Student erfolgreich hinzugefügt", "Hinzugefügt", JOptionPane.INFORMATION_MESSAGE);
                        clear();
                    } catch (Exception e) {
                    } finally {
                        try {
                            con.close();
                        } catch (Exception ex) {
                        }
                    }

                }

            } catch (Exception e) {
            } finally {
                try {
                    con.close();
                    rst.close();
                } catch (Exception ex) {
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, miss, "Datenverlust", 2);
        }

    }

    private void update() {

        String miss = "Sie haben vergessen, die folgenden Daten einzugeben :\n";
        if (name.getText().equals("")) {
            miss += nameLabel.getText() + "\n";
        }
        if (mobile.getText().equals("")) {
            miss += mobileLabel.getText() + "\n";
        }
        if (!(male.isSelected() || fmale.isSelected())) {
            miss += geschlechtLabel.getText() + "\n";
        }

        String gender = male.getText();
        if (fmale.isSelected()) {
            gender = fmale.getText();
        }
        if (!name.getText().equals("") && !mobile.getText().equals("") && (male.isSelected() || fmale.isSelected())) {

            try {
                //id_student + name_student + password + mobile + gender + avg + required_amount + amount_paid + rest_of_the_fees
                con = ConnectionDataBase.getConnection();
                com = con.prepareStatement("UPDATE student SET name_student='" + name.getText() + "', mobile='" + mobile.getText() + "', gender='" + gender + "' WHERE id_student='" + Integer.parseInt(id.getText()) + "'");
                com.execute();

                JOptionPane.showMessageDialog(null, "Studentendaten wurden erfolgreich geändert.", "Modifiziert", JOptionPane.INFORMATION_MESSAGE);
                clear();
                id.setEnabled(true);
                name.setEnabled(false);
                mobile.setEnabled(false);
                male.setEnabled(false);
                fmale.setEnabled(false);

            } catch (Exception e) {
            } finally {
                try {
                    con.close();
                } catch (Exception ex) {
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, miss, "Datenverlust", 2);
        }

    }

    private void delete() {

        String miss = "Sie haben vergessen, die folgenden Daten einzugeben :\n";
        if (id.getText().equals("")) {
            miss += idLabel.getText() + "\n";
        }
        if (!id.getText().equals("")) {

            try {
                //id_student + name_student + password + mobile + gender + avg + required_amount + amount_paid + rest_of_the_fees

                con = ConnectionDataBase.getConnection();
                com = con.prepareStatement("SELECT * FROM student WHERE id_student = '" + Integer.parseInt(id.getText()) + "'");
                rst = com.executeQuery();

                if (rst.next()) {
                    con = ConnectionDataBase.getConnection();
                    com = con.prepareStatement("DELETE FROM student WHERE id_student = '" + Integer.parseInt(id.getText()) + "'");
                    com.execute();

                    JOptionPane.showMessageDialog(null, "Student erfolgreich gelöscht.", "Gelöscht", JOptionPane.INFORMATION_MESSAGE);
                    clear();
                    id.setEnabled(true);
                    name.setEnabled(false);
                    mobile.setEnabled(false);
                    male.setEnabled(false);
                    fmale.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Die Studentnummer existiert bereits nicht", "Existiert nicht", 2);
                }

            } catch (Exception e) {
            } finally {
                try {
                    con.close();
                } catch (Exception ex) {
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, miss, "Datenverlust", 2);
        }

    }

    private void clear() {

        id.setText("");
        name.setText("");
        mobile.setText("");
        buttonGroup1.clearSelection();
//        male.setSelected(false);
//        fmale.setSelected(false);

    }
}
